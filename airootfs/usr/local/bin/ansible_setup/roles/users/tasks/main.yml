---
# tasks file for users

- name: Set root password
  ansible.builtin.user:
    name: root
    password: "{{ root_password | password_hash('sha512') }}"
  no_log: true # Avoid logging sensitive data

- name: Ensure user shell package is installed
  ansible.builtin.package:
    name: "{{ user_shell_package | default('zsh') }}" # Default to zsh if not specified
    state: present
  vars:
    user_shell_package_map:
      bash: bash
      zsh: zsh
      fish: fish
      mksh: mksh
    user_shell_package: "{{ user_shell_package_map[user_shell | default('zsh')] | default('zsh') }}"

- name: Create user account
  ansible.builtin.user:
    name: "{{ username }}"
    password: "{{ user_password | password_hash('sha512') }}"
    shell: "/bin/{{ user_shell | default('zsh') }}" # Default to zsh
    groups: "wheel,audio,video,optical,storage,power,input" # Common groups
    append: yes
    create_home: yes
    state: present
  no_log: true # Avoid logging sensitive data

- name: Configure sudoers for wheel group
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    regexp: '^# %wheel ALL=\(ALL:ALL\) ALL'
    line: '%wheel ALL=(ALL:ALL) ALL'
    state: present
    validate: /usr/sbin/visudo -cf %s

- name: Copy skel files to user's home directory
  ansible.builtin.command: "cp -rT /etc/skel/ /home/{{ username }}/"
  args:
    creates: "/home/{{ username }}/.bashrc" # Example, only run if home is "empty" from skel perspective
  changed_when: true # This command always implies change if it runs
  # Consider using synchronize or template for more fine-grained control

- name: Set correct ownership for user's home directory
  ansible.builtin.file:
    path: "/home/{{ username }}"
    owner: "{{ username }}"
    group: "{{ username }}" # Typically user's primary group is same as username
    recurse: yes
    state: directory

# Placeholder for additional user configurations:
# - SSH key deployment
# - Dotfile management (e.g., using git, stow, or templates)
# - Specific shell configurations (e.g., oh-my-zsh, starship prompt)